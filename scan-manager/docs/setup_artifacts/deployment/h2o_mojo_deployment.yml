apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{RESOURCE_NAME}}
    certifai_model_use_case: {{MODEL_USE_CASE_ID}}
  name: {{RESOURCE_NAME}}
  namespace: {{NAMESPACE}}
spec:
  ports:
    - name: {{RESOURCE_NAME}}
      port: 8551
      protocol: TCP
      targetPort: 8551
  selector:
    app: {{RESOURCE_NAME}}
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{RESOURCE_NAME}}
    certifai_model_use_case: {{MODEL_USE_CASE_ID}}
  name: {{RESOURCE_NAME}}
  namespace: {{NAMESPACE}}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{RESOURCE_NAME}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{RESOURCE_NAME}}
      name: {{RESOURCE_NAME}}
      namespace: {{NAMESPACE}}
    spec:
      containers:
        - image: {{IMAGE_NAME}}
          imagePullPolicy: IfNotPresent
          name: {{RESOURCE_NAME}}
          ports:
            - containerPort: 8551
              protocol: TCP
          env:
            - name: MODEL_PATH
              value: "{{MODEL_PATH}}"
            - name: METADATA_PATH
              value: "{{METADATA_PATH}}"
            - name: H2O_LICENSE_PATH
              value: "{{CERTIFAI_DATA_URL}}/files/license.txt"
            - name: BUCKET_ENDPOINT
              value: "{{BUCKET_ENDPOINT}}"
            - name: BUCKET_ACCESS_KEY
              value: "{{BUCKET_ACCESS_KEY}}"
            - name: BUCKET_SECRET_KEY
              value: "{{BUCKET_SECRET_KEY}}"
          resources:
            requests:
              memory: "1Gi"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
